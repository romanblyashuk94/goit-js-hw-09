{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAqBF,SAASC,cAAc,kBAC5CE,EAAeH,SAASC,cAAc,iBACtCG,EAAsBJ,SAASC,cAAc,mBA0BnD,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,UAAEN,QAAUC,IAGtBM,EAAO,UAAEP,QAAUC,MAClBA,MAlCPR,EAAQgB,iBAAiB,UAEzB,SAAkCC,GAChCA,EAAEC,iBACF,IAAIV,EAAQW,OAAOhB,EAAmBiB,OACtC,MAAMC,EAAYF,OAAOf,EAAagB,OAChCE,EAAiBH,OAAOd,EAAoBe,QAKpD,SAA8BG,EAAOF,EAAWC,GAC9C,IAAK,IAAIE,EAAI,EAAGA,GAAKF,EAAgBE,IACnClB,EAAckB,EAAGD,GACdE,MAAK,EArBZlB,SAqBeA,EArBfC,MAqByBA,KACjBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAqBrB,QAAeC,SAE7DqB,OAAM,EAxBbtB,SAwBgBA,EAxBhBC,MAwB0BA,KAClBkB,EAAA5B,GAAS6B,OAAOG,QAAQ,oBAAoBvB,QAAeC,SAE/De,GAASF,EAZXU,CAAqBvB,EAAOa,EAAWC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst fromRef = document.querySelector(\".form\");\nconst firstDelayInputRef = document.querySelector('[name=\"delay\"]');\nconst stepInputRef = document.querySelector('[name=\"step\"]');\nconst amountDelayInputRef = document.querySelector('[name=\"amount\"]');\n\nfromRef.addEventListener(\"submit\", onCreatePromisesBtnClick);\n\nfunction onCreatePromisesBtnClick(e) {\n  e.preventDefault();\n  let delay = Number(firstDelayInputRef.value);\n  const delayStep = Number(stepInputRef.value);\n  const promisesAmount = Number(amountDelayInputRef.value);\n\n  runPromisesGenerator(delay, delayStep, promisesAmount);\n}\n\nfunction runPromisesGenerator(delay, delayStep, promisesAmount) {\n  for (let i = 1; i <= promisesAmount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$fromRef","document","querySelector","$47d4ff9957288465$var$firstDelayInputRef","$47d4ff9957288465$var$stepInputRef","$47d4ff9957288465$var$amountDelayInputRef","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","Number","value","delayStep","promisesAmount","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$runPromisesGenerator"],"version":3,"file":"03-promises.efd32145.js.map"}