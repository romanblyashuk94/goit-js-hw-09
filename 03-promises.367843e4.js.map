{"mappings":"AAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAChD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,AAAC;AACpE,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,AAAC;AAC7D,MAAM,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,AAAC;AAEtE,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AAEvD,SAAS,kBAAkB,CAAC,CAAC,EAAE;IAC7B,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,IAAI,MAAK,GAAG,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,AAAC;IAC7C,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,AAAC;IAC7C,MAAM,cAAc,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,AAAC;IAEzD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,EAAE,CAAE;QACxC,aAAa,CAAC,CAAC,EAAE,MAAK,CAAC,CACpB,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAA,EAAE,KAAK,CAAA,EAAE,GACxB,OAAO,CAAC,GAAG,CAAC,CAAC,sBAAoB,EAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;QAAA,CAC7D,CACF,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAA,EAAE,KAAK,CAAA,EAAE,GACzB,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAmB,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;QAAA,CAC5D,CAAC;QACJ,MAAK,IAAI,SAAS,CAAC;KACpB;CACF;AAED,SAAS,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE;IACtC,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,AAAC;IAE1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,GAAK;QACtC,UAAU,CAAC,IAAM;YACf,IAAI,aAAa,EACf,OAAO,CAAC;gBAAE,QAAQ;gBAAE,KAAK;aAAE,CAAC,CAAC;YAG/B,MAAM,CAAC;gBAAE,QAAQ;gBAAE,KAAK;aAAE,CAAC,CAAC;SAC7B,EAAE,KAAK,CAAC,CAAC;KACX,CAAC,CAAC;CACJ","sources":["src/js/03-promises.js"],"sourcesContent":["const fromRef = document.querySelector(\".form\");\nconst firstDelayInputRef = document.querySelector('[name=\"delay\"]');\nconst stepInputRef = document.querySelector('[name=\"step\"]');\nconst amountDelayInputRef = document.querySelector('[name=\"amount\"]');\n\nfromRef.addEventListener(\"submit\", onPromisesGenerate);\n\nfunction onPromisesGenerate(e) {\n  e.preventDefault();\n  let delay = Number(firstDelayInputRef.value);\n  const delayStep = Number(stepInputRef.value);\n  const promisesAmount = Number(amountDelayInputRef.value);\n\n  for (let i = 1; i <= promisesAmount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":[],"version":3,"file":"03-promises.367843e4.js.map","sourceRoot":"/__parcel_source_root/"}